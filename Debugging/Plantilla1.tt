<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation"#>
<#@ output extension=".txt" #>
<#@ MBRDCMDMI processor="MBRDCMDMIDirectiveProcessor" requires="fileName='pr.MBRDCMDMI_DSLPracticaMDDIPS'" #>

<#
	createClass();
#>

<#+
	private void createClass(){
		foreach(ClasePrincipal clase in this.TapizProyectos.Clase){
		//Definir clase
			WriteLine("public class " + clase.nombreClase + " {");
			WriteLine("");

			//Escribir identificador
			foreach(Identificador id in clase.Identificador){
				WriteLine("    private " + id.identificadorTipo + " " + id.identificador + ";");
			}
			//Escribir atributos
			foreach(Atributo a in clase.Atributo){
				WriteLine("    private " + a.atributoTipo + " " + a.nombreAtributo + ";");
			}

			//Relacion asociacion
			int j = 1;
			foreach(ClasePrincipal c in clase.DestinoClasePrincipal){
				WriteLine("    public " + c.nombreClase + " " + c.nombreClase + j + ";");
				j++;
			}
			foreach(ClasePrincipal c in clase.OrigenClasePrincipal){
				WriteLine("    public " + c.nombreClase + " " + c.nombreClase + j + ";");
				j++;
			}

			//Relacion agregacion inclusiva
			if(clase.DestinoClasePrincipal1.Count > 0){
				WriteLine("    public List<" + clase.DestinoClasePrincipal1[0].nombreClase + "> " + clase.DestinoClasePrincipal1[0].nombreClase + j + ";");
				j++;
			}
			if(clase.OrigenClasePrincipal1 != null){
				WriteLine("    public " + clase.OrigenClasePrincipal1.nombreClase + " " + clase.OrigenClasePrincipal1.nombreClase + j + ";");
				j++;
			}

			WriteLine("");
			//Escribir operaciones
			foreach(Operacion o in clase.Operacion){
				String s = "";
				int i = 0;
				foreach(Parametro p in o.Parametro){
					if(i>0){
						s += ", " + p.parametroTipo + " " + p.nombreParametro;
					}else{
						s += p.parametroTipo + " " + p.nombreParametro;
					}				
					i++;
				}
				s+= ")";
				WriteLine("    public " + o.tipoDevuelto + " " + o.operacion + "(" + s + " {");
				WriteLine("");
				WriteLine("    }");
				WriteLine("");
			}
			WriteLine("}");
			WriteLine("");
		}
	}
#>
